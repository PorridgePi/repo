name: get-latest-release

on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  update-file:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout repository for job to access it
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_REPO_TOKEN }}

      # Write latest release version and IPA URL to file
      - name: Fetch and write latest release version and IPA URL to file
        run: |
          curl -sL https://api.github.com/repos/qnblackcat/uYouPlus/releases/latest | jq -r ".tag_name" > release-versions/uYouPlus-version.txt
          curl -sL https://api.github.com/repos/qnblackcat/uYouPlus/releases/latest | jq -r '.assets[]' | jq -r '.browser_download_url' >> release-versions/uYouPlus-version.txt

      # Obtain IPA URL and version from file
      - name: Obtain IPA URL and version from file
        id: get-info
        run: |
          echo "::set-output name=uYouPlus-url::$(sed -n 2p release-versions/uYouPlus-version.txt)"
          echo "::set-output name=uYouPlus-version::$(sed -n 1p release-versions/uYouPlus-version.txt)"

      # Check if version or URL is updated
      - name: Check if version or URL is updated
        id: check-update
        run: |
          echo ::set-output name=updated::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")

      # Configure Git
      - name: Configure Git
        run: |
          git config --global user.name 'latest-release-bot'
          git config --global user.email 'latest-release-bot@example.com'

      # Commit file to repository if updated
      - name: Commit file to repository if updated
        if: steps.check-update.outputs.updated == 'true'
        run: |
          git add release-versions/uYouPlus-version.txt
          git commit -m "release: uYouPlus ${{ steps.get-info.outputs.uYouPlus-version }}"

      # Push commits to GitHub if updated
      - name: Push commits to GitHub
        if: steps.check-update.outputs.updated == 'true'
        run: |
          git push
